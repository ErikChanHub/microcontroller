C51 COMPILER V9.60.7.0   DEMO                                                              05/15/2023 01:16:12 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DEMO
OBJECT MODULE PLACED IN .\Objects\demo.obj
COMPILER INVOKED BY: D:\Keil_v4\C51\BIN\C51.EXE demo.c COMPACT OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\demo.lst) TABS(2) OBJECT(.\Objects\demo.obj)

line level    source

   1          #include <REGX52.H> 
   2          #include "delay.h"
   3          #include "LCD1602.h"
   4          #include "intrrupt.h"
   5          
   6          unsigned int res;
   7          
   8          unsigned char num;
   9          unsigned char address;
  10          unsigned char command;
  11          
  12          unsigned int  IR_Time = 0;
  13          unsigned char IR_State = 0;
  14          
  15          unsigned char IR_Data[4];
  16          unsigned char IR_pData = 0;
  17          
  18          unsigned char IR_DataFlag = 0;
  19          unsigned char IR_RepeatFlag = 0;
  20          unsigned char IR_Address = 0;
  21          unsigned char IR_Command = 0;
  22          
  23          void timer_demo_init()
  24          {
  25   1        TMOD &= 0xF0;   //设置定时器模式
  26   1        TMOD |= 0x01;   //设置定时器模式
  27   1        TF0=0;
  28   1        TR0=0;
  29   1        TH0=0;
  30   1        TL0=0;
  31   1      }
  32          
  33          /**
  34            * @brief  定时器0设置计数器值
  35            * @param  Value，要设置的计数器值，范围：0~65535
  36            * @retval 无
  37            */
  38          void timer_setcnt(unsigned int Value)
  39          {
  40   1        TH0=Value/256;
  41   1        TL0=Value%256;
  42   1      }
  43          
  44          /**
  45            * @brief  定时器0获取计数器值
  46            * @param  无
  47            * @retval 计数器值，范围：0~65535
  48            */
  49          unsigned int timer_getcnt(void)
  50          {
  51   1        return (TH0<<8)|TL0;
  52   1      }
  53          
  54          /**
C51 COMPILER V9.60.7.0   DEMO                                                              05/15/2023 01:16:12 PAGE 2   

  55            * @brief  定时器0启动停止控制
  56            * @param  Flag 启动停止标志，1为启动，0为停止
  57            * @retval 无
  58            */
  59          void timer_run(unsigned char Flag)
  60          {
  61   1        TR0=Flag;
  62   1      }
  63          
  64          /**
  65            * @brief  红外遥控获取收到数据帧标志位
  66            * @param  无
  67            * @retval 是否收到数据帧，1为收到，0为未收到
  68            */
  69          unsigned char IR_GetDataFlag(void)
  70          {
  71   1        if(IR_DataFlag)
  72   1        {
  73   2          IR_DataFlag=0;
  74   2          return 1;
  75   2        }
  76   1        return 0;
  77   1      }
  78          
  79          /**
  80            * @brief  红外遥控获取收到连发帧标志位
  81            * @param  无
  82            * @retval 是否收到连发帧，1为收到，0为未收到
  83            */
  84          unsigned char IR_GetRepeatFlag(void)
  85          {
  86   1        if(IR_RepeatFlag)
  87   1        {
  88   2          IR_RepeatFlag=0;
  89   2          return 1;
  90   2        }
  91   1        return 0;
  92   1      }
  93          
  94          /**
  95            * @brief  红外遥控获取收到的地址数据
  96            * @param  无
  97            * @retval 收到的地址数据
  98            */
  99          unsigned char IR_GetAddress(void)
 100          {
 101   1        return IR_Address;
 102   1      }
 103          
 104          /**
 105            * @brief  红外遥控获取收到的命令数据
 106            * @param  无
 107            * @retval 收到的命令数据
 108            */
 109          unsigned char IR_GetCommand(void)
 110          {
 111   1        return IR_Command;
 112   1      }
 113          
 114          void demo_test()
 115          {
 116   1        LCD_Init();
C51 COMPILER V9.60.7.0   DEMO                                                              05/15/2023 01:16:12 PAGE 3   

 117   1        
 118   1        timer_demo_init();
 119   1        Int0_Init();
 120   1      
 121   1        
 122   1        while(1)
 123   1        {
 124   2          if(IR_GetDataFlag())
 125   2          {
 126   3            address = IR_GetAddress();
 127   3            command = IR_GetCommand();
 128   3            
 129   3            LCD_ShowHexNum(2,1,address,2);
 130   3            LCD_ShowHexNum(2,5,command,2);
 131   3          }
 132   2        }
 133   1      }
 134          
 135          void Int0_Routine(void) interrupt 0
 136          {
 137   1        if(IR_State == 0)
 138   1        {
 139   2          P2 = IR_State;
 140   2          timer_setcnt(0);
 141   2          timer_run(1);
 142   2          IR_State = 1;
 143   2        }
 144   1        else if(IR_State == 1)
 145   1        {
 146   2          IR_Time = timer_getcnt();
 147   2          P2 = IR_State;
 148   2      //    LCD_ShowNum(2,1, IR_Time ,5);
 149   2          timer_setcnt(0);
 150   2          if(IR_Time>13500-500 && IR_Time<13500+500)
 151   2          {
 152   3            P2 = 0x11;
 153   3      //      LCD_ShowHexNum(1,1,0x88,2);
 154   3            IR_State = 2;
 155   3          }
 156   2          else if(IR_Time>11250-500 && IR_Time<11250+500)
 157   2          {
 158   3            IR_RepeatFlag = 1;
 159   3            timer_run(0);
 160   3            IR_State = 0;
 161   3          }
 162   2          else
 163   2          {
 164   3            IR_State = 1;
 165   3          }
 166   2        }
 167   1        else if(IR_State == 2)
 168   1        {
 169   2          IR_Time = timer_getcnt();
 170   2          timer_setcnt(0);
 171   2          if(IR_Time>1120-500 && IR_Time<1120+500)
 172   2          {
 173   3            IR_Data[IR_pData/8] &= ~(0x01<<(IR_pData%8));
 174   3            IR_pData++;
 175   3          }
 176   2          //如果计时为2250us，则接收到了数据1（判定值在12MHz晶振下为2250，在11.0592MHz晶振下为2074）
 177   2          else if(IR_Time>2250-500 && IR_Time<2250+500)
 178   2          {
C51 COMPILER V9.60.7.0   DEMO                                                              05/15/2023 01:16:12 PAGE 4   

 179   3            IR_Data[IR_pData/8]|=(0x01<<(IR_pData%8));  //数据对应位置1
 180   3            IR_pData++;     //数据位置指针自增
 181   3          }
 182   2          else          //接收出错
 183   2          {
 184   3            IR_pData=0;     //数据位置指针清0
 185   3            IR_State=1;     //置状态为1
 186   3          }
 187   2          
 188   2          if(IR_pData>=32)
 189   2          {
 190   3            IR_pData = 0;
 191   3            if((IR_Data[0]==~IR_Data[1]) && (IR_Data[2]==~IR_Data[3]))  //数据验证
 192   3            {
 193   4              IR_Address=IR_Data[0];  //转存数据
 194   4              IR_Command=IR_Data[2];
 195   4              IR_DataFlag=1;  //置收到连发帧标志位为1
 196   4            }
 197   3            timer_run(0);   //定时器停止
 198   3            IR_State=0;     //置状态为0
 199   3          }
 200   2        }
 201   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    499    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     17    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

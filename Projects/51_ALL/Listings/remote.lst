C51 COMPILER V9.60.7.0   REMOTE                                                            05/15/2023 01:09:13 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE REMOTE
OBJECT MODULE PLACED IN .\Objects\remote.obj
COMPILER INVOKED BY: D:\Keil_v4\C51\BIN\C51.EXE remote.c COMPACT OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\remote.lst) TABS(2) OBJECT(.\Objects\remote.obj)

line level    source

   1          //#include <REGX52.H>
   2          //#include "delay.h"
   3          //#include "remote.h"
   4          //#include "intrrupt.h"
   5          //#include "LCD1602.h"
   6          
   7          //unsigned char num;
   8          //unsigned char address;
   9          //unsigned char command;
  10          
  11          //unsigned int IR_Time;
  12          //unsigned char IR_State;
  13          
  14          //unsigned char IR_Data[4];
  15          //unsigned char IR_pData;
  16          
  17          //unsigned char IR_DataFlag;
  18          //unsigned char IR_RepeatFlag;
  19          //unsigned char IR_Address;
  20          //unsigned char IR_Command;
  21          
  22          //void timer_remote_init()
  23          //{
  24          //  TMOD &= 0xF0;   //设置定时器模式
  25          //  TMOD |= 0x01;   //设置定时器模式
  26          //  TF0=0;
  27          //  TR0=0;
  28          //  TH0=0;
  29          //  TL0=0;
  30          //}
  31          
  32          ///**
  33          //  * @brief  定时器0设置计数器值
  34          //  * @param  Value，要设置的计数器值，范围：0~65535
  35          //  * @retval 无
  36          //  */
  37          //void timer_setcnt(unsigned int Value)
  38          //{
  39          //  TH0=Value/256;
  40          //  TL0=Value%256;
  41          //}
  42          
  43          ///**
  44          //  * @brief  定时器0获取计数器值
  45          //  * @param  无
  46          //  * @retval 计数器值，范围：0~65535
  47          //  */
  48          //unsigned int timer_getcnt(void)
  49          //{
  50          //  return (TH0<<8)|TL0;
  51          //}
  52          
  53          ///**
  54          //  * @brief  定时器0启动停止控制
C51 COMPILER V9.60.7.0   REMOTE                                                            05/15/2023 01:09:13 PAGE 2   

  55          //  * @param  Flag 启动停止标志，1为启动，0为停止
  56          //  * @retval 无
  57          //  */
  58          //void timer_run(unsigned char Flag)
  59          //{
  60          //  TR0=Flag;
  61          //}
  62          
  63          ///**
  64          //  * @brief  红外遥控获取收到数据帧标志位
  65          //  * @param  无
  66          //  * @retval 是否收到数据帧，1为收到，0为未收到
  67          //  */
  68          //unsigned char IR_GetDataFlag(void)
  69          //{
  70          //  if(IR_DataFlag)
  71          //  {
  72          //    IR_DataFlag=0;
  73          //    return 1;
  74          //  }
  75          //  return 0;
  76          //}
  77          
  78          ///**
  79          //  * @brief  红外遥控获取收到连发帧标志位
  80          //  * @param  无
  81          //  * @retval 是否收到连发帧，1为收到，0为未收到
  82          //  */
  83          //unsigned char IR_GetRepeatFlag(void)
  84          //{
  85          //  if(IR_RepeatFlag)
  86          //  {
  87          //    IR_RepeatFlag=0;
  88          //    return 1;
  89          //  }
  90          //  return 0;
  91          //}
  92          
  93          ///**
  94          //  * @brief  红外遥控获取收到的地址数据
  95          //  * @param  无
  96          //  * @retval 收到的地址数据
  97          //  */
  98          //unsigned char IR_GetAddress(void)
  99          //{
 100          //  return IR_Address;
 101          //}
 102          
 103          ///**
 104          //  * @brief  红外遥控获取收到的命令数据
 105          //  * @param  无
 106          //  * @retval 收到的命令数据
 107          //  */
 108          //unsigned char IR_GetCommand(void)
 109          //{
 110          //  return IR_Command;
 111          //}
 112          
 113          //void remote_test()
 114          //{
 115          //  LCD_Init();
 116          //  LCD_ShowString(1,1,"ADDR  CMD  NUM");
C51 COMPILER V9.60.7.0   REMOTE                                                            05/15/2023 01:09:13 PAGE 3   

 117          //  LCD_ShowString(2,1,"00    00   000");
 118          ////  LCD_ShowString();
 119          //  
 120          //  timer_remote_init();
 121          //  Int0_Init();
 122          
 123          //  while(1)
 124          //  {
 125          //    if(IR_GetDataFlag() || IR_GetRepeatFlag())  //如果收到数据帧或者收到连发帧
 126          //    {
 127          //      address=IR_GetAddress();    //获取遥控器地址码
 128          //      command=IR_GetCommand();    //获取遥控器命令码
 129          //      
 130          //      LCD_ShowHexNum(2,1,address,2);  //显示遥控器地址码
 131          //      LCD_ShowHexNum(2,7,command,2);  //显示遥控器命令码
 132          //      
 133          //      if(command==IR_VOL_MINUS)   //如果遥控器VOL-按键按下
 134          //      {
 135          //        num--;            //Num自减
 136          //      }
 137          //      if(command==IR_VOL_ADD)     //如果遥控器VOL+按键按下
 138          //      {
 139          //        num++;            //Num自增
 140          //      }
 141          //      
 142          //      LCD_ShowNum(2,12,num,3);    //显示Num
 143          //    }
 144          //  }
 145          //}
 146          
 147          
 148          //void Int0_Routine(void) interrupt 0
 149          //{
 150          //  P2 = 0x01;
 151          //  LCD_ShowHexNum(2,3,0x01,2);
 152          //  if(IR_State == 0)
 153          //  {
 154          //    LCD_ShowHexNum(2,3,0x02,2);
 155          //    timer_setcnt(0);
 156          //    timer_run(1);
 157          //    IR_State = 1;
 158          //  }
 159          //  else if(IR_State == 1)
 160          //  {
 161          //    LCD_ShowHexNum(2,3,0x03,2);
 162          //    IR_Time = timer_getcnt();
 163          //    timer_setcnt(0);
 164          //    if(IR_Time>13500-500 && IR_Time<13500+500)
 165          //    {
 166          //      IR_State = 2;
 167          //    }
 168          //    else if(IR_Time>11250-500 && IR_Time<11250+500)
 169          //    {
 170          //      IR_RepeatFlag = 1;
 171          //      timer_run(0);
 172          //      IR_State = 0;
 173          //    }
 174          //    else
 175          //    {
 176          //      IR_State = 1;
 177          //    }
 178          //  }
C51 COMPILER V9.60.7.0   REMOTE                                                            05/15/2023 01:09:13 PAGE 4   

 179          //  else if(IR_State == 2)
 180          //  {
 181          //    P2 = 0x04;
 182          //    IR_Time = timer_getcnt();
 183          //    timer_setcnt(0);
 184          //    if(IR_Time>1120-500 && IR_Time<1120+500)
 185          //    {
 186          //      IR_Data[IR_pData/8] &= ~(0x01<<(IR_pData%8));
 187          //      IR_pData++;
 188          //    }
 189          //    //如果计时为2250us，则接收到了数据1（判定值在12MHz晶振下为2250，在11.0592MHz晶振下为2074）
 190          //    else if(IR_Time>2250-500 && IR_Time<2250+500)
 191          //    {
 192          //      IR_Data[IR_pData/8]|=(0x01<<(IR_pData%8));  //数据对应位置1
 193          //      IR_pData++;     //数据位置指针自增
 194          //    }
 195          //    else          //接收出错
 196          //    {
 197          //      IR_pData=0;     //数据位置指针清0
 198          //      IR_State=1;     //置状态为1
 199          //    }
 200          //    
 201          //    if(IR_pData>=32)
 202          //    {
 203          //      IR_pData = 0;
 204          //      if((IR_Data[0]==~IR_Data[1]) && (IR_Data[2]==~IR_Data[3]))  //数据验证
 205          //      {
 206          //        IR_Address=IR_Data[0];  //转存数据
 207          //        IR_Command=IR_Data[2];
 208          //        IR_DataFlag=1;  //置收到连发帧标志位为1
 209          //      }
 210          //      timer_run(0);   //定时器停止
 211          //      IR_State=0;     //置状态为0
 212          //    }
 213          //  }
 214          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
